[
  {
    "config": {
      "preserveStateOnPageChange": false
    },
    "configured": true,
    "id": "17449977750160.6389158422002637",
    "kind": "store_item",
    "mode": "manual",
    "modeConfigured": false,
    "name": "varSubmissionMessage",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [],
    "storeItem": {
      "initialValue": "Thank you for submitting your request to LightBurn.\u003cbr\u003e\u003cbr\u003eSubmission Reference Number:    ",
      "value": "Thank you for submitting your request to LightBurn.\u003cbr\u003e\u003cbr\u003eSubmission Reference Number:    ",
      "valueType": "string",
      "version": 1
    }
  },
  {
    "config": {
      "preserveStateOnPageChange": false
    },
    "configured": true,
    "id": "17449978535540.7520329259483322",
    "kind": "store_item",
    "mode": "manual",
    "modeConfigured": false,
    "name": "varSubmissionReqNum",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [],
    "storeItem": {
      "initialValue": "",
      "value": "",
      "valueType": "string",
      "version": 1
    }
  },
  {
    "config": {
      "preserveStateOnPageChange": false
    },
    "configured": true,
    "id": "17442261119050.8717427456624829",
    "kind": "store_item",
    "mode": "manual",
    "modeConfigured": false,
    "name": "varPageLoadObj",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": false,
    "steps": [],
    "storeItem": {
      "initialValue": "",
      "value": "",
      "valueType": "string",
      "version": 1
    }
  },
  {
    "config": {
      "preserveStateOnPageChange": false
    },
    "configured": true,
    "id": "17442260099390.32577370561770036",
    "kind": "store_item",
    "mode": "manual",
    "modeConfigured": false,
    "name": "varInviteCode",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [],
    "storeItem": {
      "initialValue": "",
      "value": "",
      "valueType": "string",
      "version": 1
    }
  },
  {
    "config": {
      "preserveStateOnPageChange": false
    },
    "configured": true,
    "id": "17449377804820.8689053700946403",
    "kind": "store_item",
    "mode": "manual",
    "modeConfigured": false,
    "name": "varFieldConfiguration",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [],
    "storeItem": {
      "initialValue": "{ \n    address1: 'Address',\n    address1_required: true,\n    address1_hide: false,\n    address2: 'Apartment, suite, etc',\n    address2_required: false,\n    address2_hide: false,\n    city: 'City',\n    city_required: true,\n    city_hide: false,\n    province: 'Province',\n    province_required: true,\n    province_hide: false,\n    zip: 'Postal Code',\n    zip_required: true,\n    zip_hide: false,\n    phone: 'Phone',\n    phone_required: true,\n    phone_hide: false,\n}",
      "value": "{ \n    address1: 'Address',\n    address1_required: true,\n    address1_hide: false,\n    address2: 'Apartment, suite, etc',\n    address2_required: false,\n    address2_hide: false,\n    city: 'City',\n    city_required: true,\n    city_hide: false,\n    province: 'Province',\n    province_required: true,\n    province_hide: false,\n    zip: 'Postal Code',\n    zip_required: true,\n    zip_hide: false,\n    phone: 'Phone',\n    phone_required: true,\n    phone_hide: false,\n}",
      "valueType": "object",
      "version": 1
    }
  },
  {
    "config": {
      "preserveStateOnPageChange": false
    },
    "configured": true,
    "id": "17455116857260.4242691704079291",
    "kind": "store_item",
    "mode": "manual",
    "modeConfigured": false,
    "name": "varFieldConfigMap",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [],
    "storeItem": {
      "initialValue": "{}",
      "value": "{}",
      "valueType": "object",
      "version": 1
    }
  },
  {
    "config": {
      "preserveStateOnPageChange": false
    },
    "configured": true,
    "id": "17453437566370.43876931428139665",
    "kind": "store_item",
    "mode": "manual",
    "modeConfigured": false,
    "name": "varCompanyUrls",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [],
    "storeItem": {
      "initialValue": "[]",
      "value": "[]",
      "valueType": "array",
      "version": 1
    }
  },
  {
    "config": {
      "preserveStateOnPageChange": false
    },
    "configured": true,
    "id": "17455252450960.9493621739560717",
    "kind": "store_item",
    "mode": "manual",
    "modeConfigured": false,
    "name": "varParamsLoaded_postCountry",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [],
    "storeItem": {
      "initialValue": false,
      "value": false,
      "valueType": "boolean",
      "version": 1
    }
  },
  {
    "config": {
      "preserveStateOnPageChange": false
    },
    "configured": true,
    "id": "17455255703430.36215772440614824",
    "kind": "store_item",
    "mode": "manual",
    "modeConfigured": false,
    "name": "varParamsLoaded_postProvince",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [],
    "storeItem": {
      "initialValue": false,
      "value": false,
      "valueType": "boolean",
      "version": 1
    }
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.pageLoadProcessing.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.pageLoadProcessing.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.pageLoadProcessing.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": true,
    "id": "17442259661660.4249579116906994",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "pageLoadProcessing",
    "nameConfigured": true,
    "parentId": null,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17442259696770.17355876424653394",
        "isChanged": true,
        "level": 0,
        "name": "pageLoadVariables",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var lvarPageLoadObj = {{data}};\n\nif (null === lvarPageLoadObj) lvarPageLoadObj = {};\n\nlvarPageLoadObj['invite_code_present'] = false;\n\nif (lvarPageLoadObj !== null \u0026\u0026 lvarPageLoadObj.queryParams \u0026\u0026 lvarPageLoadObj.queryParams.invite_code) {\n  lvarPageLoadObj['invite_code_present'] = true;\n}\n\nreturn lvarPageLoadObj;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17450283259350.36922330853189445",
        "isChanged": true,
        "level": 0,
        "name": "condition",
        "params": [
          {
            "interpolationType": "code",
            "type": "code",
            "value": "return {{steps.pageLoadVariables.data.invite_code_present}};",
            "valueType": "interpolatedValue"
          },
          {
            "type": "steps",
            "value": [
              {
                "condition": true,
                "steps": [
                  {
                    "fallthroughError": false,
                    "id": "17450299851580.3853756922140138",
                    "isChanged": true,
                    "level": 0,
                    "name": "getInviteCode",
                    "nameConfigured": true,
                    "params": [
                      {
                        "interpolationType": "string",
                        "type": "query",
                        "value": "SELECT * FROM public.lb_registration_subm WHERE invite_code LIKE {{steps.pageLoadVariables.data.queryParams.invite_code}} AND invite_expire_dt \u003e NOW() AND (submission_status LIKE 'INVITED-NEW' OR submission_status LIKE 'INVITED-SENT');",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "mustSelectFirst": true,
                        "type": "datasourceId",
                        "value": "Lightburn (PG)",
                        "valueType": "string"
                      },
                      {
                        "type": "preparedQuery",
                        "value": "SELECT * FROM public.lb_registration_subm WHERE invite_code LIKE ? AND invite_expire_dt \u003e NOW() AND (submission_status LIKE 'INVITED-NEW' OR submission_status LIKE 'INVITED-SENT');",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "preparedQueryParams",
                        "value": [
                          "__UI_BAKERY__FORMAT_IF_DATE__(steps.pageLoadVariables.data.queryParams.invite_code)"
                        ],
                        "valueType": "custom"
                      },
                      {
                        "type": "customDatabaseName",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "stepVersion",
                        "value": 2,
                        "valueType": "custom"
                      },
                      {
                        "type": "successMapper",
                        "value": "var returnResults = {{steps.pageLoadVariables.data}};\nreturnResults['results'] = {{data}};\nreturnResults['invite_code_valid'] = false;\n\nif (returnResults.results.length \u003e 0) {\n\treturnResults['invite_code_valid'] = true;\n  \n}\n\nreturn returnResults;",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "failureMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "mapperEnabled",
                        "value": true,
                        "valueType": "custom"
                      }
                    ],
                    "type": "customSQLQuery"
                  },
                  {
                    "fallthroughError": false,
                    "id": "17458570223810.14385835336189523",
                    "isChanged": true,
                    "level": 1,
                    "name": "executeLogInviteActivity",
                    "nameConfigured": true,
                    "params": [
                      {
                        "type": "action",
                        "value": "17458569644760.2960792176318361",
                        "valueType": "custom"
                      },
                      {
                        "type": "isActionsLibraryCall",
                        "value": false,
                        "valueType": "custom"
                      },
                      {
                        "interpolationType": "code",
                        "type": "customParams",
                        "value": "function isIPv4(ip) {\n  if (ip === null) {\n    ip = '';\n  }\n  \n  // This regex matches 0.0.0.0 to 255.255.255.255 (with no leading zeros)\n  return /^(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)){3}$/.test(ip);\n}\n\nvar returnData = {{steps.getInviteCode.data}};\n\nif (returnData.invite_code_valid) {\n  returnData['public_ip'] = '';;\n\t// Using the ipify API\n  await fetch('https://api.ipify.org/?format=json')\n    .then(res =\u003e res.json())\n    .then(data =\u003e {\n      console.log('Public IP:', data.ip);\n      returnData['public_ip'] = data.ip;\n    });\n\n  // Using the ipify API\n  if (isIPv4(returnData['public_ip'])) {\n    await fetch('https://api64.ipify.org/?format=json')\n      .then(res =\u003e res.json())\n      .then(data =\u003e {\n      console.log('Public IP (IPv6):', data.ip);\n      if (!isIPv4(data.ip))\n        returnData['public_ip_ipv6'] = data.ip;\n    });\n  }\n}\n\nreturn returnData;",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "interpolationType": "code",
                        "type": "successMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "interpolationType": "code",
                        "type": "failureMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "mapperEnabled",
                        "value": false,
                        "valueType": "custom"
                      }
                    ],
                    "type": "executeAction"
                  }
                ]
              },
              {
                "condition": false,
                "steps": [
                  {
                    "fallthroughError": false,
                    "id": "17450287576180.4277367137759387",
                    "isChanged": true,
                    "level": 0,
                    "name": "codeReturnActionData",
                    "nameConfigured": true,
                    "params": [
                      {
                        "interpolationType": "code",
                        "type": "asyncCode",
                        "value": "return {{steps.pageLoadVariables.data}};",
                        "valueType": "interpolatedValue"
                      }
                    ],
                    "type": "customAsyncCode"
                  }
                ]
              }
            ],
            "valueType": "custom"
          }
        ],
        "type": "condition"
      },
      {
        "fallthroughError": false,
        "id": "17450287449420.6853755157291522",
        "isChanged": false,
        "level": 0,
        "name": "codeGatherConditionOutput",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "return {{data}};",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": true,
        "id": "17449379650770.9321463900442342",
        "isChanged": true,
        "level": 0,
        "name": "execute_loadRefCountry",
        "nameConfigured": true,
        "params": [
          {
            "type": "action",
            "value": "17449268799170.07936126322204695",
            "valueType": "custom"
          },
          {
            "type": "isActionsLibraryCall",
            "value": false,
            "valueType": "custom"
          },
          {
            "interpolationType": "code",
            "type": "customParams",
            "value": "return {{data}};",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "successMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": false,
            "valueType": "custom"
          }
        ],
        "type": "executeAction"
      },
      {
        "fallthroughError": true,
        "id": "17453391316900.7436530742122643",
        "isChanged": true,
        "level": 0,
        "name": "execute_loadFieldConfig",
        "nameConfigured": true,
        "params": [
          {
            "type": "action",
            "value": "17453387620820.3497935920579217",
            "valueType": "custom"
          },
          {
            "type": "isActionsLibraryCall",
            "value": false,
            "valueType": "custom"
          },
          {
            "interpolationType": "code",
            "type": "customParams",
            "value": "return {{data}};",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "successMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": false,
            "valueType": "custom"
          }
        ],
        "type": "executeAction"
      },
      {
        "fallthroughError": false,
        "id": "17450290084000.6837039456305462",
        "isChanged": true,
        "level": 0,
        "name": "codeLoadForm",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var returnVar = {{steps.codeGatherConditionOutput.data}};\n\n{{state.varPageLoadObj}} = returnVar;\n\nif (returnVar.invite_code_present \u0026\u0026 returnVar.invite_code_valid) {\n  {{state.varInviteCode}} = returnVar.queryParams.invite_code;\n  ui.txtCompanyName.setValue(returnVar.results[0].registrant_name);\n  ui.inEmailCompany.setValue(returnVar.results[0].company_email);\n  ui.inEmailUser.setValue(returnVar.results[0].invitee_email);\n  \n  if (returnVar.results[0].registration_type === 'reseller' || returnVar.results[0].registration_type === 'vendor') {\n    ui.radioRegType.setValue(returnVar.results[0].registration_type);\n  }\n}\n\nif (returnVar.queryParams \u0026\u0026 returnVar.queryParams.companyName)\n\tui.txtCompanyName.setValue(returnVar.queryParams.companyName);\n\nif (returnVar.queryParams \u0026\u0026 returnVar.queryParams.companyEmail)\n\tui.inEmailCompany.setValue(returnVar.queryParams.companyEmail);\n\nif (returnVar.queryParams \u0026\u0026 returnVar.queryParams.countryCode)\n\tui.selectCountry.setValue(returnVar.queryParams.countryCode);\n\nif (returnVar.queryParams \u0026\u0026 returnVar.queryParams.firstName)\n\tui.txtFirstName.setValue(returnVar.queryParams.firstName);\n\nif (returnVar.queryParams \u0026\u0026 returnVar.queryParams.lastName)\n\tui.txtLastName.setValue(returnVar.queryParams.lastName);\n\nif (returnVar.queryParams \u0026\u0026 returnVar.queryParams.userEmail)\n\tui.inEmailUser.setValue(returnVar.queryParams.userEmail);\n\nif (returnVar.queryParams \u0026\u0026 returnVar.queryParams.email) {\n\tui.inEmailCompany.setValue(returnVar.queryParams.email);\n\tui.inEmailUser.setValue(returnVar.queryParams.email);\n}\n\nreturn returnVar;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      }
    ]
  },
  {
    "automation": {
      "cron": "",
      "cronEnabled": false,
      "key": "",
      "notificationEnabled": false,
      "timezone": "UTC",
      "webhookEnabled": false,
      "workflowId": "17458569644760.3362851965724898"
    },
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.logInviteCodeActivity.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.logInviteCodeActivity.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.logInviteCodeActivity.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": false,
    "defaultParams": "return {{params}};",
    "id": "17458569644760.2960792176318361",
    "kind": "server_workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "logInviteCodeActivity",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17458578608360.7225761178437476",
        "isChanged": false,
        "level": 0,
        "name": "getParameters",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "return {{data}};",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17458578526950.13060854322380855",
        "isChanged": true,
        "level": 0,
        "name": "condition",
        "params": [
          {
            "interpolationType": "code",
            "type": "code",
            "value": "return {{steps.getParameters.data.invite_code_valid \u0026\u0026 (app.env !== \"prod\" \u0026\u0026 !state.varLbSessionIdValid)}};",
            "valueType": "interpolatedValue"
          },
          {
            "type": "steps",
            "value": [
              {
                "condition": true,
                "steps": [
                  {
                    "fallthroughError": false,
                    "id": "17458570003220.5671273072212748",
                    "isChanged": true,
                    "level": 0,
                    "name": "createAccessLogEntry",
                    "nameConfigured": true,
                    "params": [
                      {
                        "type": "datasourceId",
                        "value": "Lightburn (PG)",
                        "valueType": "string"
                      },
                      {
                        "type": "resourceId",
                        "value": "public.log_registration_sub",
                        "valueType": "string"
                      },
                      {
                        "type": "entity",
                        "value": {
                          "mode": "structured",
                          "valueByMode": {
                            "custom": "",
                            "structured": {
                              "ip_addr": {
                                "value": "{{steps.getParameters.data.public_ip}}"
                              },
                              "lb_id": {
                                "value": "{{steps.getParameters.data.results[0].lb_id}}"
                              },
                              "new_status": {
                                "value": "INVITE ACTIVITY"
                              }
                            }
                          }
                        },
                        "valueType": "custom"
                      },
                      {
                        "type": "customDatabaseName",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "successMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "failureMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "mapperEnabled",
                        "value": false,
                        "valueType": "custom"
                      }
                    ],
                    "type": "CREATE_ENTITY"
                  }
                ]
              },
              {
                "condition": false,
                "steps": []
              }
            ],
            "valueType": "custom"
          }
        ],
        "type": "condition"
      },
      {
        "fallthroughError": false,
        "id": "17458583518850.2636324258559405",
        "isChanged": true,
        "level": 0,
        "name": "returnParameters",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "return {{steps.getParameters.data}};",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      }
    ]
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.loadRefCountry.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.loadRefCountry.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.loadRefCountry.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": true,
    "id": "17449268799170.07936126322204695",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "loadRefCountry",
    "nameConfigured": true,
    "parentId": null,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17449942690120.017015925235063012",
        "isChanged": true,
        "level": 0,
        "name": "load",
        "params": [
          {
            "type": "datasourceId",
            "value": "Lightburn (PG)",
            "valueType": "string"
          },
          {
            "type": "resourceId",
            "value": "public.ref_country_code",
            "valueType": "string"
          },
          {
            "type": "filters",
            "value": [
              {
                "column": "enabled",
                "operation": "=",
                "value": {
                  "value": "TRUE"
                }
              }
            ],
            "valueType": "custom"
          },
          {
            "type": "ordering",
            "value": {
              "limit": {
                "value": ""
              },
              "offset": {
                "value": ""
              },
              "orderBy": {
                "value": "country_name"
              },
              "orderDirection": {
                "value": "asc"
              }
            },
            "valueType": "custom"
          },
          {
            "type": "additionalParams",
            "value": [
              {
                "name": "",
                "value": ""
              }
            ],
            "valueType": "custom"
          },
          {
            "type": "customDatabaseName",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "successMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": false,
            "valueType": "custom"
          }
        ],
        "type": "LOAD_COLLECTION"
      }
    ]
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.loadFieldConfig.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.loadFieldConfig.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.loadFieldConfig.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": false,
    "id": "17453387620820.3497935920579217",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "loadFieldConfig",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17453388053080.4457690472760317",
        "isChanged": true,
        "level": 0,
        "name": "loadFieldConfigData",
        "nameConfigured": true,
        "params": [
          {
            "type": "datasourceId",
            "value": "Lightburn (PG)",
            "valueType": "string"
          },
          {
            "type": "resourceId",
            "value": "public.ref_country_field_map",
            "valueType": "string"
          },
          {
            "type": "filters",
            "value": [
              {
                "column": "enabled",
                "operation": "=",
                "value": {
                  "value": "TRUE"
                }
              }
            ],
            "valueType": "custom"
          },
          {
            "type": "ordering",
            "value": {
              "limit": {
                "value": 1000
              },
              "offset": {
                "value": ""
              },
              "orderBy": {
                "value": ""
              },
              "orderDirection": {
                "value": "asc"
              }
            },
            "valueType": "custom"
          },
          {
            "type": "additionalParams",
            "value": [
              {
                "name": "",
                "value": ""
              }
            ],
            "valueType": "custom"
          },
          {
            "type": "customDatabaseName",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "successMapper",
            "value": "const sqlResults = {{data}};\nvar returnResults = {};\n\nsqlResults.forEach(result =\u003e {\n  returnResults[result.country_2char_code] = result;\n});\n\nreturn returnResults;",
            "valueType": "interpolatedValue"
          },
          {
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": true,
            "valueType": "custom"
          }
        ],
        "type": "LOAD_COLLECTION"
      },
      {
        "fallthroughError": true,
        "id": "17453390783680.8791031329345224",
        "isChanged": true,
        "level": 0,
        "name": "saveToState",
        "nameConfigured": true,
        "params": [
          {
            "type": "name",
            "value": "17455116857260.4242691704079291",
            "valueType": "string"
          },
          {
            "interpolationType": "code",
            "type": "value",
            "value": "{{steps.loadFieldConfigData.data}}",
            "valueType": "interpolatedValue"
          },
          {
            "type": "producible",
            "value": true,
            "valueType": "custom"
          }
        ],
        "type": "putInStore"
      }
    ]
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.loadRefProvince.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.loadRefProvince.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.loadRefProvince.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": false,
    "id": "17450087442270.6967607433764361",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "loadRefProvince",
    "nameConfigured": true,
    "parentId": null,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17450093483510.8279839535635285",
        "isChanged": true,
        "level": 0,
        "name": "loadCountryDetails",
        "nameConfigured": true,
        "params": [
          {
            "type": "datasourceId",
            "value": "Lightburn (PG)",
            "valueType": "string"
          },
          {
            "type": "resourceId",
            "value": "public.ref_country_code",
            "valueType": "string"
          },
          {
            "type": "filters",
            "value": [
              {
                "column": "country_2char_code",
                "operation": "=",
                "value": {
                  "value": "{{ui.selectCountry.value}}"
                }
              }
            ],
            "valueType": "custom"
          },
          {
            "type": "ordering",
            "value": {
              "limit": {
                "value": "1"
              },
              "offset": {
                "value": ""
              },
              "orderBy": {
                "value": "country_name"
              },
              "orderDirection": {
                "value": "asc"
              }
            },
            "valueType": "custom"
          },
          {
            "type": "additionalParams",
            "value": [
              {
                "name": "",
                "value": ""
              }
            ],
            "valueType": "custom"
          },
          {
            "type": "customDatabaseName",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "successMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": false,
            "valueType": "custom"
          }
        ],
        "type": "LOAD_COLLECTION"
      },
      {
        "fallthroughError": false,
        "id": "17450095404240.0619149033671742",
        "isChanged": true,
        "level": 0,
        "name": "codeSetFormVariables",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "if ({{steps.loadCountryDetails.data.length \u003e 0}} \u0026\u0026 {{ui.selectCountry.value.length \u003e 0}}) {\n  var queryResults = {{steps.loadCountryDetails.data[0]}};\n  ui.selectPhoneCC.setValue(queryResults.country_code);\n\tui.imageFlag.setSrc(queryResults.flag_url );\n\t\n\tif (state.varFieldConfigMap \u0026\u0026 state.varFieldConfigMap[queryResults.country_2char_code]) {\n    state.varFieldConfiguration = state.varFieldConfigMap[queryResults.country_2char_code];\n  } else {\n    state.varFieldConfiguration = state.varFieldConfigMap.DEFAULT;\n  }\n} else {\n  ui.selectCountry.resetValidation();\n  ui.selectPhoneCC.reset();\n  ui.selectProvince.reset();\n  ui.imageFlag.setSrc('');\n  state.varFieldConfiguration = state.varFieldConfigMap.DEFAULT;\n}\n\nreturn {{data}};",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17450087658200.948024430376366",
        "isChanged": true,
        "level": 0,
        "name": "loadProvince",
        "nameConfigured": true,
        "params": [
          {
            "type": "datasourceId",
            "value": "Lightburn (PG)",
            "valueType": "string"
          },
          {
            "type": "resourceId",
            "value": "public.ref_province_code",
            "valueType": "string"
          },
          {
            "type": "filters",
            "value": [
              {
                "column": "country_2char_code",
                "operation": "=",
                "value": {
                  "value": "{{ui.selectCountry.value}}"
                }
              },
              {
                "column": "enabled",
                "operation": "=",
                "value": {
                  "value": "TRUE"
                }
              }
            ],
            "valueType": "custom"
          },
          {
            "type": "ordering",
            "value": {
              "limit": {
                "value": ""
              },
              "offset": {
                "value": ""
              },
              "orderBy": {
                "value": "province_name"
              },
              "orderDirection": {
                "value": "asc"
              }
            },
            "valueType": "custom"
          },
          {
            "type": "additionalParams",
            "value": [
              {
                "name": "",
                "value": ""
              }
            ],
            "valueType": "custom"
          },
          {
            "type": "customDatabaseName",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "successMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": false,
            "valueType": "custom"
          }
        ],
        "type": "LOAD_COLLECTION"
      },
      {
        "fallthroughError": false,
        "id": "17455251038980.5455444367640075",
        "isChanged": true,
        "level": 0,
        "name": "codeFinishLoadingForm",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var returnData = {{data}};\n\nif (!state.varParamsLoaded_postCountry) {\n  var queryParams = state.varPageLoadObj.queryParams;\n\n  if (queryParams \u0026\u0026 queryParams.address1)\n    ui.txtAddress1.setValue(queryParams.address1);\n\n  if (queryParams \u0026\u0026 queryParams.address2)\n    ui.txtAddress2.setValue(queryParams.address2);\n\n  if (queryParams \u0026\u0026 queryParams.city)\n    ui.txtCity.setValue(queryParams.city);\n\n  /*if (queryParams \u0026\u0026 queryParams.province) {\n    ui.selectProvince.setValue(queryParams.province);\n  }*/\n\n  if (queryParams \u0026\u0026 queryParams.zoneCode)\n    ui.selectProvince.setValue(queryParams.zoneCode);\n\n  if (queryParams \u0026\u0026 queryParams.zip)\n    ui.txtZip.setValue(queryParams.zip);\n\n  if (queryParams \u0026\u0026 queryParams.phone)\n    ui.txtPhoneNum.setValue(queryParams.phone);\n  \n  actions.loadForm_PostProvince.trigger();\n\n  state.varParamsLoaded_postCountry = true;\n}\n\nreturn returnData;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      }
    ]
  },
  {
    "config": {
      "autoTrigger": false,
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.loadForm_PostProvince.name}}\"?",
      "defaultParams": "",
      "delay": "500",
      "errorToast": "Action \"{{actions.loadForm_PostProvince.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": false,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.loadForm_PostProvince.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": true,
    "defaultParams": "",
    "id": "17455256728670.061636855843888894",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "loadForm_PostProvince",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17455256968750.7751538253273321",
        "isChanged": true,
        "level": 0,
        "name": "codeLoadProvinceParameter",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "if (!state.varParamsLoaded_postProvince) {\n  var queryParams = state.varPageLoadObj.queryParams;\n  \n  /*if (queryParams \u0026\u0026 queryParams.province) {\n    ui.selectProvince.setValue(queryParams.province);\n  }*/\n\n  if (queryParams \u0026\u0026 queryParams.zoneCode)\n    ui.selectProvince.setValue(queryParams.zoneCode);\n\n  if (queryParams \u0026\u0026 queryParams.rt)\n    ui.radioRegType.setValue(queryParams.rt);\n\n  state.varParamsLoaded_postProvince = true;\n}\n\nreturn state.varParamsLoaded_postProvince;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      }
    ]
  },
  {
    "config": {
      "autoTrigger": false,
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.onClickSubmit.name}}\"?",
      "defaultParams": "",
      "delay": "0",
      "errorToast": "Action \"{{actions.onClickSubmit.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": false,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.onClickSubmit.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": false,
    "defaultParams": "",
    "id": "17450355120590.988052041493089",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "onClickSubmit",
    "nameConfigured": true,
    "parentId": null,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17453530110570.37719011698193816",
        "isChanged": true,
        "level": 0,
        "name": "getParameters",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var returnData = {{data}};\n\nreturnData['field_configuration'] = state.varFieldConfiguration;\n\nreturn returnData;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17465564232750.6495222234327898",
        "isChanged": true,
        "level": 0,
        "name": "formValidation",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "code",
            "value": "{{ui.formVendorRegistration.validate()}}\n\nreturn {{! ui.formVendorRegistration.valid}};",
            "valueType": "interpolatedValue"
          },
          {
            "type": "steps",
            "value": [
              {
                "condition": true,
                "steps": [
                  {
                    "fallthroughError": false,
                    "id": "17465565004570.747034075110767",
                    "isChanged": true,
                    "level": 0,
                    "name": "throwValidationError",
                    "nameConfigured": true,
                    "params": [
                      {
                        "interpolationType": "code",
                        "type": "asyncCode",
                        "value": "throw new Error('Form is not valid.');",
                        "valueType": "interpolatedValue"
                      }
                    ],
                    "type": "customAsyncCode"
                  }
                ]
              },
              {
                "condition": false,
                "steps": []
              }
            ],
            "valueType": "custom"
          }
        ],
        "type": "condition"
      },
      {
        "fallthroughError": false,
        "id": "17453530329070.18380826127951833",
        "isChanged": true,
        "level": 0,
        "name": "getSubmissionRef",
        "nameConfigured": true,
        "params": [
          {
            "type": "action",
            "value": "17365495221620.7491934325161336",
            "valueType": "custom"
          },
          {
            "type": "isActionsLibraryCall",
            "value": true,
            "valueType": "custom"
          },
          {
            "interpolationType": "code",
            "type": "customParams",
            "value": "return {guid_format: 'xxxxxxxxxxxx'};",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "successMapper",
            "value": "return {{data}}.toUpperCase();",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": true,
            "valueType": "custom"
          }
        ],
        "type": "executeAction"
      },
      {
        "fallthroughError": false,
        "id": "17450363123660.07801802175034789",
        "isChanged": true,
        "level": 0,
        "name": "codeGetSubmissionForm",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "function isIPv4(ip) {\n  // This regex matches 0.0.0.0 to 255.255.255.255 (with no leading zeros)\n  return /^(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]?\\d)){3}$/.test(ip);\n}\n\nvar returnData = {{steps.getParameters.data}};\nreturnData['varPageLoadObj'] = state.varPageLoadObj;\n\n// Get BAIPI\nconst browserInfo = {\n  userAgent: navigator.userAgent,\n  platform: navigator.platform,\n  language: navigator.language,\n  vendor: navigator.vendor,\n};\n\nreturnData.varPageLoadObj['browser_info'] = browserInfo;\n\nconsole.log(returnData);\n\nif ( ui.selectCountry.value \u0026\u0026 ui.selectCountry.value.length \u003e 0 ) {\n  const rowCountry = actions.loadRefCountry.data.find(item =\u003e item.country_2char_code === ui.selectCountry.value);\n  //console.log('Country Row', rowCountry);\n\treturnData['country'] = rowCountry.country_name;\n}\n\nif ( ui.selectProvince.value \u0026\u0026 ui.selectProvince.value.length \u003e 0 ) {\n  const rowProvince = actions.loadRefProvince.data.find(item =\u003e item.province_code === ui.selectProvince.value);\n  //console.log('Province Row', rowProvince);\n  returnData['province'] = rowProvince.province_name;\n}\n\nreturnData['registration_type'] = returnData.radioRegType;\nreturnData['registration_type_grief'] = false;\nreturnData['submission_ref'] = steps.getSubmissionRef.data;\nreturnData['invite_code'] = state.varInviteCode.length \u003e 0 ? state.varInviteCode : null;\nreturnData['submission_status'] = \"NEW\";\nreturnData['company_urls'] = [];\n\nstate.varCompanyUrls.forEach(urlItem =\u003e {\n  returnData['company_urls'].push(urlItem.url);\n});\n\nif (returnData.invite_code !== null) {\n  returnData['submission_status'] = \"INVITED-COMPLETE\";\n\treturnData['registration_type'] = state.varPageLoadObj.results[0].registration_type;\n  returnData['registration_type_grief'] = returnData.registration_type !== returnData.radioRegType;\n}\n\nif ( returnData['registration_type_grief'] ) {\n  returnData['submission_status'] = \"INVITED-GRIEF\";\n}\n\n// Using the ipify API\nfetch('https://api.ipify.org/?format=json')\n  .then(res =\u003e res.json())\n  .then(data =\u003e {\n    console.log('Public IP:', data.ip);\n  \treturnData.varPageLoadObj.browser_info['public_ip'] = data.ip;\n  });\n\n// Using the ipify API\nif (isIPv4(returnData.varPageLoadObj.browser_info['public_ip'])) {\n  fetch('https://api64.ipify.org/?format=json')\n    .then(res =\u003e res.json())\n    .then(data =\u003e {\n      console.log('Public IP (IPv6):', data.ip);\n      if (!isIPv4(data.ip))\n        returnData.varPageLoadObj.browser_info['public_ip_ipv6'] = data.ip;\n    });\n}\n\nreturn returnData;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17455190624770.8986136280171925",
        "isChanged": true,
        "level": 0,
        "name": "execute_serverSubmitReq",
        "nameConfigured": true,
        "params": [
          {
            "type": "action",
            "value": "17455184921510.7440654127508818",
            "valueType": "custom"
          },
          {
            "type": "isActionsLibraryCall",
            "value": false,
            "valueType": "custom"
          },
          {
            "interpolationType": "code",
            "type": "customParams",
            "value": "return {{steps.codeGetSubmissionForm.data}};",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "successMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": false,
            "valueType": "custom"
          }
        ],
        "type": "executeAction"
      },
      {
        "fallthroughError": true,
        "id": "17453491038070.06608385874200062",
        "isChanged": true,
        "level": 0,
        "name": "codePostConditionResults",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var returnData = {{steps.codeGetSubmissionForm.data}};\nreturnData['query_results'] = {{steps.execute_serverSubmitReq.data}};\nstate.varInviteCode = '';\n\nconst url = new URL(window.location.href);\nurl.searchParams.delete('invite_code'); // Replace 'yourParameterName' with the actual parameter name\nwindow.history.pushState({}, '', url); // Update the URL without reloading the page\n\nreturn returnData;",
            "valueType": "interpolatedValue"
          }
        ],
        "paused": false,
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17453532248000.3852029374065804",
        "isChanged": true,
        "level": 0,
        "name": "codeClearForm",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "ui.formVendorRegistration.resetValue();\nstate.varInviteCode = '';\nstate.varCompanyUrls = [];\nstate.varPageLoadObj['queryParams'] = {};\nstate.varPageLoadObj['results'] = [];\nui.imageFlag.setSrc('');\n\nconst formChildren = ui.formVendorRegistration.children;\n\n// Iterate over each child and reset its value\nObject.keys(formChildren).forEach(key =\u003e {\n  // Reset validation or set value to initial state\n  formChildren[key].setErrors(null); // or set to a default value if needed\n});\n\nreturn {{data}};",
            "valueType": "interpolatedValue"
          }
        ],
        "paused": false,
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17458527900580.15774275940881988",
        "isChanged": true,
        "level": 0,
        "name": "codeOpenModalWindow",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "state.varSubmissionReqNum = {{data.submission_ref.toUpperCase()}};\nui.modalSubStatus.open();\n\nreturn {{data}};",
            "valueType": "interpolatedValue"
          }
        ],
        "paused": false,
        "type": "customAsyncCode"
      }
    ]
  },
  {
    "automation": {
      "cron": "",
      "cronEnabled": false,
      "key": "",
      "notificationEnabled": false,
      "timezone": "UTC",
      "webhookEnabled": false,
      "workflowId": "17455184921510.7986197652510257"
    },
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.serverSubmitReq.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.serverSubmitReq.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.serverSubmitReq.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": true,
    "defaultParams": "return {{params}};",
    "id": "17455184921510.7440654127508818",
    "kind": "server_workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "serverSubmitReq",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17455185675670.7998338107829295",
        "isChanged": true,
        "level": 0,
        "name": "codeGetSubmissionForm",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var returnData = {{data}};\nvar inputData = returnData;\n\nreturnData['registration_metadata'] = null;\nreturnData['registration_metadata'] = JSON.stringify(inputData);\n\nreturnData['company_name'] = returnData['txtCompanyName'];\nreturnData['user_email'] = returnData['inEmailUser'];\nreturnData['company_email'] = returnData['inEmailCompany'];\nreturnData['request_id'] = returnData['submission_ref'];\nreturnData['full_name'] = (returnData['txtFirstName'] + ' ' + returnData['txtLastName']).trim();\nreturnData['address_full'] = \n              (\n              (returnData['txtAddress1']) + \n              (returnData.txtAddress2 ? (', ' + returnData['txtAddress2']) : '') + \n              (returnData.txtCity ? (', ' + returnData['txtCity']) : '') + \n              (returnData.selectProvince ? (', ' + returnData['selectProvince']) : '') + \n              (returnData.txtZip ? ('  ' + returnData['txtZip']) : '') + \n              (returnData.selectCountry ? (' ' + returnData['selectCountry']) : '')\n            ).trim();\nreturnData['phone_num'] = returnData['selectPhoneCC'] + ' ' + returnData['txtPhoneNum'];\n\nreturn returnData;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17455186063380.359363269182546",
        "isChanged": true,
        "level": 0,
        "name": "condition",
        "params": [
          {
            "interpolationType": "code",
            "type": "code",
            "value": "return {{steps.codeGetSubmissionForm.data.invite_code !== null}};",
            "valueType": "interpolatedValue"
          },
          {
            "type": "steps",
            "value": [
              {
                "condition": true,
                "steps": [
                  {
                    "fallthroughError": false,
                    "id": "17455186383080.3322502819904226",
                    "isChanged": true,
                    "level": 0,
                    "name": "updateSubmission",
                    "nameConfigured": true,
                    "params": [
                      {
                        "type": "datasourceId",
                        "value": "Lightburn (PG)",
                        "valueType": "string"
                      },
                      {
                        "type": "resourceId",
                        "value": "public.lb_registration_subm",
                        "valueType": "string"
                      },
                      {
                        "type": "filter",
                        "value": [
                          {
                            "column": "invite_code",
                            "operation": "=",
                            "value": {
                              "value": "{{steps.codeGetSubmissionForm.data.invite_code}}"
                            }
                          }
                        ],
                        "valueType": "custom"
                      },
                      {
                        "type": "entity",
                        "value": {
                          "mode": "structured",
                          "valueByMode": {
                            "custom": "",
                            "structured": {
                              "company_email": {
                                "value": "{{steps.codeGetSubmissionForm.data.inEmailCompany}}"
                              },
                              "invitee_email": {
                                "value": "{{steps.codeGetSubmissionForm.data.inEmailUser}}"
                              },
                              "invitee_name": {
                                "value": "{{steps.codeGetSubmissionForm.data.txtFirstName + ' ' + steps.codeGetSubmissionForm.data.txtLastName}}"
                              },
                              "registrant_name": {
                                "value": "{{steps.codeGetSubmissionForm.data.txtCompanyName}}"
                              },
                              "registration_metadata": {
                                "value": "{{steps.codeGetSubmissionForm.data.registration_metadata}}"
                              },
                              "registration_type": {
                                "value": "{{steps.codeGetSubmissionForm.data.registration_type}}"
                              },
                              "submission_ref": {
                                "value": "{{steps.codeGetSubmissionForm.data.submission_ref.toUpperCase()}}"
                              },
                              "submission_status": {
                                "value": "{{steps.codeGetSubmissionForm.data.submission_status}}"
                              }
                            }
                          }
                        },
                        "valueType": "custom"
                      },
                      {
                        "type": "replace",
                        "value": false,
                        "valueType": "string"
                      },
                      {
                        "type": "bulk",
                        "value": false,
                        "valueType": "string"
                      },
                      {
                        "type": "customDatabaseName",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "successMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "failureMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "mapperEnabled",
                        "value": false,
                        "valueType": "custom"
                      }
                    ],
                    "paused": false,
                    "type": "UPDATE_ENTITY"
                  },
                  {
                    "fallthroughError": false,
                    "id": "17465646992980.1269118483611119",
                    "isChanged": true,
                    "level": 1,
                    "name": "conditionReseller",
                    "nameConfigured": true,
                    "params": [
                      {
                        "interpolationType": "code",
                        "type": "code",
                        "value": "return {{steps.codeGetSubmissionForm.data.submission_status}} === 'INVITED-COMPLETE';",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "steps",
                        "value": [
                          {
                            "condition": true,
                            "steps": [
                              {
                                "fallthroughError": false,
                                "id": "17465457733460.011883081988187882",
                                "isChanged": true,
                                "level": 1,
                                "name": "requestPandaDocTemplate",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "mustSelectFirst": true,
                                    "type": "datasourceId",
                                    "value": "PandaDocs",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "method",
                                    "value": "GET",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "url",
                                    "value": "/public/v1/templates",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "headers",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "",
                                            "value": ""
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "queryParams",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "q",
                                            "value": "API - LightBurn Software Non-Exclusive Reseller Agreement"
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "body",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "structuredBody",
                                    "value": [],
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "bodyType",
                                    "value": "raw",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "successMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "failureMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "mapperEnabled",
                                    "value": false,
                                    "valueType": "custom"
                                  }
                                ],
                                "paused": false,
                                "type": "httpRequest"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17465463833210.4169248393204048",
                                "isChanged": true,
                                "level": 1,
                                "name": "requestTemplateDetails",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "mustSelectFirst": true,
                                    "type": "datasourceId",
                                    "value": "PandaDocs",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "method",
                                    "value": "GET",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "url",
                                    "value": "/public/v1/templates/{{steps.requestPandaDocTemplate.data.results[0].id}}/details",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "headers",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "",
                                            "value": ""
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "queryParams",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "",
                                            "value": ""
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "body",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "structuredBody",
                                    "value": [],
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "bodyType",
                                    "value": "raw",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "successMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "failureMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "mapperEnabled",
                                    "value": false,
                                    "valueType": "custom"
                                  }
                                ],
                                "paused": false,
                                "type": "httpRequest"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17465612060460.13074385385044418",
                                "isChanged": true,
                                "level": 1,
                                "name": "postDocumentDraft",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "mustSelectFirst": true,
                                    "type": "datasourceId",
                                    "value": "PandaDocs",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "method",
                                    "value": "POST",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "url",
                                    "value": "/public/v1/documents",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "headers",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "Content-Type",
                                            "value": "application/json"
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "queryParams",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "",
                                            "value": ""
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "body",
                                    "value": "{\n  \"name\": {{steps.codeGetSubmissionForm.data.company_name + \" - LightBurn Software Non-Exclusive Reseller Agreement\"}},\n  \"template_uuid\": {{steps.requestPandaDocTemplate.data.results[0].id}},\n  \"recipients\": [\n    {\n      \"email\": {{steps.codeGetSubmissionForm.data.user_email}},\n      \"redirect\": {\n        \"is_enabled\": true,\n        \"url\": \"https://lightburnsoftware.com\"\n      },\n      \"verification_settings\": {\n        \"verification_place\": \"before_open\",\n        \"id_verification\": {\n          \"enabled\": true\n        }\n      }\n    }\n  ],\n  \"tokens\": [\n    {\n      \"name\": \"LightBurn.request_id\",\n      \"value\": {{steps.codeGetSubmissionForm.data.request_id}}\n    } \n  ],\n  \"fields\": \n    {\n      \"company_name\": { \"value\": {{steps.codeGetSubmissionForm.data.company_name}} }, \n    \t\"full_name\": { \"value\": {{steps.codeGetSubmissionForm.data.full_name}} }, \n\t\t\t\"address_full\": { \"value\": {{steps.codeGetSubmissionForm.data.address_full}} }, \n      \"phone_num\": { \"value\": {{steps.codeGetSubmissionForm.data.phone_num}} }, \n      \"user_email\": { \"value\": {{steps.codeGetSubmissionForm.data.user_email}} }\n    }\n}",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "structuredBody",
                                    "value": [],
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "bodyType",
                                    "value": "object",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "successMapper",
                                    "value": "var returnResults = {{data}};\n\n// Convert to a Date object\nconst dateObject = new Date(returnResults['date_created']);\n\n// Format to PostgreSQL timestamp\nconst postgresTimestamp = dateObject.toISOString().replace('T', ' ').split('.')[0];\n\nreturnResults['doc_issue_ts'] = postgresTimestamp;\nreturnResults['doc_issue_ref'] = returnResults.id;\nreturnResults['doc_issue_type'] = returnResults.status;\n\nreturn returnResults;",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "failureMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "mapperEnabled",
                                    "value": true,
                                    "valueType": "custom"
                                  }
                                ],
                                "paused": false,
                                "type": "httpRequest"
                              }
                            ]
                          },
                          {
                            "condition": false,
                            "steps": [
                              {
                                "fallthroughError": false,
                                "id": "17465652592960.45923843432827016",
                                "isChanged": true,
                                "level": 1,
                                "name": "code",
                                "params": [
                                  {
                                    "interpolationType": "code",
                                    "type": "asyncCode",
                                    "value": "var returnResults = {};\n\nreturnResults['id'] = null;\nreturnResults['name'] = null;\nreturnResults['status'] = null;\nreturnResults['uuid'] = null;\nreturnResults['doc_issue_ts'] = null;\nreturnResults['doc_issue_ref'] = null;\nreturnResults['doc_issue_type'] = null;\n\nreturn returnResults;",
                                    "valueType": "interpolatedValue"
                                  }
                                ],
                                "type": "customAsyncCode"
                              }
                            ]
                          }
                        ],
                        "valueType": "custom"
                      }
                    ],
                    "type": "condition"
                  },
                  {
                    "fallthroughError": false,
                    "id": "17465660791010.09664383904133222",
                    "isChanged": false,
                    "level": 1,
                    "name": "codePandaDocResults",
                    "nameConfigured": true,
                    "params": [
                      {
                        "interpolationType": "code",
                        "type": "asyncCode",
                        "value": "return {{data}};",
                        "valueType": "interpolatedValue"
                      }
                    ],
                    "type": "customAsyncCode"
                  },
                  {
                    "fallthroughError": false,
                    "id": "17466317182290.20812691526056704",
                    "isChanged": true,
                    "level": 0,
                    "name": "updateSubmission2",
                    "nameConfigured": true,
                    "params": [
                      {
                        "type": "datasourceId",
                        "value": "Lightburn (PG)",
                        "valueType": "string"
                      },
                      {
                        "type": "resourceId",
                        "value": "public.lb_registration_subm",
                        "valueType": "string"
                      },
                      {
                        "type": "filter",
                        "value": [
                          {
                            "column": "invite_code",
                            "operation": "=",
                            "value": {
                              "value": "{{steps.codeGetSubmissionForm.data.invite_code}}"
                            }
                          }
                        ],
                        "valueType": "custom"
                      },
                      {
                        "type": "entity",
                        "value": {
                          "mode": "structured",
                          "valueByMode": {
                            "custom": "",
                            "structured": {
                              "doc_issue_ref": {
                                "value": "{{steps.codePandaDocResults.data.doc_issue_ref}}"
                              },
                              "doc_issue_ts": {
                                "value": "{{steps.codePandaDocResults.data.doc_issue_ts}}"
                              },
                              "doc_issue_type": {
                                "value": "{{steps.codePandaDocResults.data.doc_issue_type}}"
                              }
                            }
                          }
                        },
                        "valueType": "custom"
                      },
                      {
                        "type": "replace",
                        "value": false,
                        "valueType": "string"
                      },
                      {
                        "type": "bulk",
                        "value": false,
                        "valueType": "string"
                      },
                      {
                        "type": "customDatabaseName",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "successMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "failureMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "mapperEnabled",
                        "value": false,
                        "valueType": "custom"
                      }
                    ],
                    "paused": false,
                    "type": "UPDATE_ENTITY"
                  }
                ]
              },
              {
                "condition": false,
                "steps": [
                  {
                    "fallthroughError": false,
                    "id": "17455188442030.1591403285905919",
                    "isChanged": true,
                    "level": 0,
                    "name": "createSubmission",
                    "nameConfigured": true,
                    "params": [
                      {
                        "type": "datasourceId",
                        "value": "Lightburn (PG)",
                        "valueType": "string"
                      },
                      {
                        "type": "resourceId",
                        "value": "public.lb_registration_subm",
                        "valueType": "string"
                      },
                      {
                        "type": "entity",
                        "value": {
                          "mode": "structured",
                          "valueByMode": {
                            "custom": "",
                            "structured": {
                              "company_email": {
                                "value": "{{steps.codeGetSubmissionForm.data.inEmailCompany}}"
                              },
                              "invitee_email": {
                                "value": "{{steps.codeGetSubmissionForm.data.inEmailUser}}"
                              },
                              "invitee_name": {
                                "value": "{{steps.codeGetSubmissionForm.data.txtFirstName + ' ' + steps.codeGetSubmissionForm.data.txtLastName}}"
                              },
                              "registrant_name": {
                                "value": "{{steps.codeGetSubmissionForm.data.txtCompanyName}}"
                              },
                              "registration_metadata": {
                                "value": "{{steps.codeGetSubmissionForm.data.registration_metadata}}"
                              },
                              "registration_type": {
                                "value": "{{steps.codeGetSubmissionForm.data.radioRegType}}"
                              },
                              "submission_ref": {
                                "value": "{{steps.codeGetSubmissionForm.data.submission_ref.toUpperCase()}}"
                              },
                              "submission_status": {
                                "value": "{{steps.codeGetSubmissionForm.data.submission_status}}"
                              }
                            }
                          }
                        },
                        "valueType": "custom"
                      },
                      {
                        "type": "customDatabaseName",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "successMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "failureMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "mapperEnabled",
                        "value": false,
                        "valueType": "custom"
                      }
                    ],
                    "paused": false,
                    "type": "CREATE_ENTITY"
                  }
                ]
              }
            ],
            "valueType": "custom"
          }
        ],
        "paused": false,
        "type": "condition"
      }
    ]
  },
  {
    "automation": {
      "cron": "",
      "cronEnabled": false,
      "key": "",
      "notificationEnabled": false,
      "timezone": "UTC",
      "webhookEnabled": false,
      "workflowId": "17466353251640.5583459081044475"
    },
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.serverSubmitEggReq.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.serverSubmitEggReq.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.serverSubmitEggReq.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": false,
    "defaultParams": "return {{params}};",
    "id": "17466353251640.722584953360755",
    "kind": "server_workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "serverSubmitEggReq",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17466353479940.3826337269870359",
        "isChanged": true,
        "level": 0,
        "name": "codeGetSubmissionForm",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var returnData = {{data}};\nvar inputData = returnData;\n\nreturnData['registration_metadata'] = null;\nreturnData['registration_metadata'] = JSON.stringify(inputData);\n\nreturnData['company_name'] = returnData['txtCompanyName'];\nreturnData['user_email'] = returnData['inEmailUser'];\nreturnData['company_email'] = returnData['inEmailCompany'];\nreturnData['request_id'] = returnData['submission_ref'];\nreturnData['full_name'] = (returnData['txtFirstName'] + ' ' + returnData['txtLastName']).trim();\nreturnData['address_full'] = \n              (\n              (returnData['txtAddress1']) + \n              (returnData.txtAddress2 ? (', ' + returnData['txtAddress2']) : '') + \n              (returnData.txtCity ? (', ' + returnData['txtCity']) : '') + \n              (returnData.selectProvince ? (', ' + returnData['selectProvince']) : '') + \n              (returnData.txtZip ? ('  ' + returnData['txtZip']) : '') + \n              (returnData.selectCountry ? (' ' + returnData['selectCountry']) : '')\n            ).trim();\nreturnData['phone_num'] = returnData['selectPhoneCC'] + ' ' + returnData['txtPhoneNum'];\n\nreturn returnData;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      }
    ]
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.onClickAddUrl.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.onClickAddUrl.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.onClickAddUrl.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": false,
    "id": "17453442504040.1604869276762434",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "onClickAddUrl",
    "nameConfigured": true,
    "parentId": null,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17453442647350.9081519085686343",
        "isChanged": true,
        "level": 0,
        "name": "codeAddUrlAndResetField",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var newUrl = {};\n\nnewUrl['url'] = {{ui.inputCompanyUrlAdd.value}};\n\nstate.varCompanyUrls.push(newUrl);\nui.inputCompanyUrlAdd.setValue('');\n\nreturn '';",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      }
    ]
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.onClickDeleteUrl.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.onClickDeleteUrl.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.onClickDeleteUrl.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": true,
    "id": "17453444771990.41304506141249964",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "onClickDeleteUrl",
    "nameConfigured": true,
    "parentId": null,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17453444771990.7807148016338384",
        "isChanged": true,
        "level": 0,
        "name": "codeDeleteUrlFromList",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var deleteData = {{data}};\n\nstate.varCompanyUrls.splice(deleteData.index, 1);\n{{ui.tableCompanyUrls.resetFilters()}};\n\nreturn {{state.varCompanyUrls}};",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      }
    ]
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.onFormChange.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.onFormChange.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.onFormChange.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": false,
    "id": "17455198660340.3662296349970052",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "onFormChange",
    "nameConfigured": true,
    "parentId": null,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17455198753190.4232329710871997",
        "isChanged": true,
        "level": 0,
        "name": "code",
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var changeInformation = {{ui.formVendorRegistration}};\nvar formValid = true;\nchangeInformation['invalid_fields'] = [];\n\nObject.entries(changeInformation.children).forEach(([key, value]) =\u003e {\n  console.log(`Key: ${key}, Value: ${value}`);\n  if (!value.valid) {\n    formValid = value.valid;\n    changeInformation.invalid_fields.push(key);\n  }\n});\n\nif (formValid \u0026\u0026 !changeInformation.valid) {\n\tui.formVendorRegistration.resetValidation();\n  console.warn('Reset Validation');\n}\n\nchangeInformation['formValid'] = formValid;\nreturn changeInformation;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      }
    ]
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.OnCloseModalWindow.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.OnCloseModalWindow.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.OnCloseModalWindow.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": false,
    "id": "17458531320590.3672652811213801",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "OnCloseModalWindow",
    "nameConfigured": true,
    "parentId": null,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17458531421550.28329692244038807",
        "isChanged": true,
        "level": 0,
        "name": "code",
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "state.varSubmissionReqNum = '';\nreturn {{data}};",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17458550972250.6882047138443047",
        "isChanged": true,
        "level": 0,
        "name": "navigate",
        "params": [
          {
            "interpolationType": "string",
            "type": "url",
            "value": "{{routes.home.url}}",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "string",
            "type": "queryParams",
            "value": {
              "mode": "structured",
              "value": {
                "custom": "",
                "structured": [
                  {
                    "name": "",
                    "value": ""
                  }
                ]
              }
            },
            "valueType": "custom"
          }
        ],
        "type": "navigation"
      }
    ]
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.onClickCopyToClipboard.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.onClickCopyToClipboard.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": true,
      "successToast": "Reference Number Copied to Clipboard",
      "successToastDuration": "2000",
      "successToastHideByClick": false
    },
    "configured": false,
    "id": "17458539477300.7254436766735634",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "onClickCopyToClipboard",
    "nameConfigured": true,
    "parentId": null,
    "parentPageId": "17441303566070.8966271460923145",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17458539825700.5712828614076473",
        "isChanged": true,
        "level": 0,
        "name": "execute",
        "params": [
          {
            "type": "action",
            "value": "17458537166180.4817732161260352",
            "valueType": "custom"
          },
          {
            "type": "isActionsLibraryCall",
            "value": true,
            "valueType": "custom"
          },
          {
            "interpolationType": "code",
            "type": "customParams",
            "value": "return { text: {{state.varSubmissionReqNum}}};",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "successMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": false,
            "valueType": "custom"
          }
        ],
        "type": "executeAction"
      }
    ]
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.onInit.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.onInit.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.onInit.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "id": "17465556275900.8712630373332798",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": true,
    "name": "onInit",
    "nameConfigured": true,
    "parentPageId": "17441303566070.8966271460923145",
    "steps": [
      {
        "fallthroughError": false,
        "id": "17465556318770.474479338516419",
        "isChanged": true,
        "level": 0,
        "name": "code",
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      }
    ]
  }
]