[
  {
    "config": {
      "preserveStateOnPageChange": false
    },
    "configured": true,
    "id": "17286092530690.15088588687405813",
    "kind": "store_item",
    "mode": "manual",
    "modeConfigured": false,
    "name": "varReqAccessEmail",
    "nameConfigured": true,
    "parentPageId": "17285310452590.17868028461832997",
    "selected": true,
    "steps": [],
    "storeItem": {
      "initialValue": "",
      "value": "",
      "valueType": "string",
      "version": 1
    }
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.accessCodeRequest.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.accessCodeRequest.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.accessCodeRequest.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": true,
    "id": "17290249787840.6360854430465093",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": false,
    "name": "accessCodeRequest",
    "nameConfigured": true,
    "parentId": null,
    "parentPageId": "17285310452590.17868028461832997",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17440498193540.1388740451631416",
        "isChanged": true,
        "level": 0,
        "name": "getUserEmail",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var emailInput = {{ui.inputEmailAddressLogin.value}};\nconsole.info('Email:', emailInput);\nreturn emailInput;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17290251871880.9758082863162036",
        "isChanged": true,
        "level": 0,
        "name": "getUser",
        "nameConfigured": true,
        "params": [
          {
            "mustSelectFirst": true,
            "type": "datasourceId",
            "value": "Zendesk",
            "valueType": "string"
          },
          {
            "type": "method",
            "value": "GET",
            "valueType": "string"
          },
          {
            "interpolationType": "string",
            "type": "url",
            "value": "/api/v2/users/search",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "string",
            "type": "headers",
            "value": {
              "mode": "structured",
              "value": {
                "custom": "",
                "structured": [
                  {
                    "name": "",
                    "value": ""
                  }
                ]
              }
            },
            "valueType": "custom"
          },
          {
            "interpolationType": "string",
            "type": "queryParams",
            "value": {
              "mode": "structured",
              "value": {
                "custom": "",
                "structured": [
                  {
                    "name": "query",
                    "value": "{{steps.getUserEmail.data !== null ? steps.getUserEmail.data : \"\"}}"
                  }
                ]
              }
            },
            "valueType": "custom"
          },
          {
            "interpolationType": "code",
            "type": "body",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "structuredBody",
            "value": [],
            "valueType": "interpolatedValue"
          },
          {
            "type": "bodyType",
            "value": "raw",
            "valueType": "string"
          },
          {
            "interpolationType": "code",
            "type": "successMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": false,
            "valueType": "custom"
          }
        ],
        "type": "httpRequest"
      },
      {
        "fallthroughError": false,
        "id": "17290249787850.40269408302197407",
        "isChanged": true,
        "level": 0,
        "name": "requestOrg",
        "nameConfigured": true,
        "params": [
          {
            "mustSelectFirst": true,
            "type": "datasourceId",
            "value": "Zendesk",
            "valueType": "string"
          },
          {
            "type": "method",
            "value": "GET",
            "valueType": "string"
          },
          {
            "interpolationType": "string",
            "type": "url",
            "value": "/api/v2/users/{{(steps.getUser.data.count === 1) ? steps.getUser.data.users[0].id : \"999999999999999\"}}/organizations",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "string",
            "type": "headers",
            "value": {
              "mode": "structured",
              "value": {
                "custom": "",
                "structured": [
                  {
                    "name": "",
                    "value": ""
                  }
                ]
              }
            },
            "valueType": "custom"
          },
          {
            "interpolationType": "string",
            "type": "queryParams",
            "value": {
              "mode": "structured",
              "value": {
                "custom": "",
                "structured": [
                  {
                    "name": "",
                    "value": ""
                  }
                ]
              }
            },
            "valueType": "custom"
          },
          {
            "interpolationType": "code",
            "type": "body",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "structuredBody",
            "value": [],
            "valueType": "interpolatedValue"
          },
          {
            "type": "bodyType",
            "value": "raw",
            "valueType": "string"
          },
          {
            "interpolationType": "code",
            "type": "successMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "interpolationType": "code",
            "type": "failureMapper",
            "value": "",
            "valueType": "interpolatedValue"
          },
          {
            "type": "mapperEnabled",
            "value": false,
            "valueType": "custom"
          }
        ],
        "type": "httpRequest"
      },
      {
        "fallthroughError": false,
        "id": "17290249787850.22686833812193252",
        "isChanged": true,
        "level": 0,
        "name": "codeReqAccessEmail",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "state.varReqAccessEmail = {{steps.getUserEmail.data !== null ? steps.getUserEmail.data : \"\"}};\n\nreturn state.varReqAccessEmail;",
            "valueType": "interpolatedValue"
          }
        ],
        "paused": false,
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17290249787850.9864518901650001",
        "isChanged": true,
        "level": 0,
        "name": "conditionUserExists",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "code",
            "value": "state.varZenUserProfile = steps.getUser.data;\n\nreturn steps.getUser.data.count === 1;",
            "valueType": "interpolatedValue"
          },
          {
            "type": "steps",
            "value": [
              {
                "condition": true,
                "steps": [
                  {
                    "fallthroughError": false,
                    "id": "17290249787850.2217306659403233",
                    "isChanged": true,
                    "level": 1,
                    "name": "codeOrg",
                    "nameConfigured": true,
                    "params": [
                      {
                        "interpolationType": "code",
                        "type": "asyncCode",
                        "value": "state.varZenOrgProfile = steps.requestOrg.data;\n\nreturn true;",
                        "valueType": "interpolatedValue"
                      }
                    ],
                    "type": "customAsyncCode"
                  },
                  {
                    "fallthroughError": false,
                    "id": "17290249787850.6184041209530073",
                    "isChanged": true,
                    "level": 1,
                    "name": "conditionOrgAuthorized",
                    "nameConfigured": true,
                    "params": [
                      {
                        "interpolationType": "code",
                        "type": "code",
                        "value": "var authorized = false;\n\nif (state.varZenOrgProfile.count \u003e 0) {\n\tfor(var i = 0; i \u003c state.varZenOrgProfile.organizations.length; i++) {\n    if (state.varZenOrgProfile.organizations[i].tags.length \u003e 0) {\n      for ( var ii = 0; ii \u003c state.varZenOrgProfile.organizations[i].tags.length; ii++ ) {\n        if (state.varZenOrgProfile.organizations[i].tags[ii].toLowerCase() === \"vendor\") {\n         \tauthorized = true;\n        }\n      }\n    }\n  }\n}\n\nreturn authorized;",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "steps",
                        "value": [
                          {
                            "condition": true,
                            "steps": [
                              {
                                "fallthroughError": false,
                                "id": "17290399783070.8672577534862751",
                                "isChanged": true,
                                "level": 1,
                                "name": "createAuthorizedRcd",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "interpolationType": "string",
                                    "type": "query",
                                    "value": "INSERT INTO public.lb_access_session (email, authorized, zen_user_id) VALUES ({{steps.codeReqAccessEmail.data}}, true, {{steps.getUser.data.users[0].id}}) RETURNING lb_id;",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "mustSelectFirst": true,
                                    "type": "datasourceId",
                                    "value": "Lightburn (PG)",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "preparedQuery",
                                    "value": "INSERT INTO public.lb_access_session (email, authorized, zen_user_id) VALUES (?, true, ?) RETURNING lb_id;",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "preparedQueryParams",
                                    "value": [
                                      "__UI_BAKERY__FORMAT_IF_DATE__(steps.codeReqAccessEmail.data)",
                                      "__UI_BAKERY__FORMAT_IF_DATE__(steps.getUser.data.users[0].id)"
                                    ],
                                    "valueType": "custom"
                                  },
                                  {
                                    "type": "customDatabaseName",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "stepVersion",
                                    "value": 2,
                                    "valueType": "custom"
                                  },
                                  {
                                    "type": "successMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "failureMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "mapperEnabled",
                                    "value": false,
                                    "valueType": "custom"
                                  }
                                ],
                                "paused": false,
                                "type": "customSQLQuery"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17290249787850.6715261998571955",
                                "isChanged": true,
                                "level": 1,
                                "name": "generateAccessCode",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "interpolationType": "code",
                                    "type": "asyncCode",
                                    "value": "function generatePassword(length) {\n  var password = '';\n  var characters = 'ABCDEFGHJKLMNPQRSTUVWXYZ23456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i \u003c length; i++) {\n    password += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return password;\n}\n\n// Generate a 12-character password\nreturn generatePassword(10);\n",
                                    "valueType": "interpolatedValue"
                                  }
                                ],
                                "paused": false,
                                "type": "customAsyncCode"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17290249787850.38806825176945825",
                                "isChanged": true,
                                "level": 2,
                                "name": "queryPostEncryptedCode2",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "interpolationType": "string",
                                    "type": "query",
                                    "value": "UPDATE public.lb_access_session SET access_code = crypt({{steps.generateAccessCode.data}}, gen_salt('md5')) WHERE lb_id = {{steps.createAuthorizedRcd.data[0].lb_id}};",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "mustSelectFirst": true,
                                    "type": "datasourceId",
                                    "value": "Lightburn (PG)",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "preparedQuery",
                                    "value": "UPDATE public.lb_access_session SET access_code = crypt(?, gen_salt('md5')) WHERE lb_id = ?;",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "preparedQueryParams",
                                    "value": [
                                      "__UI_BAKERY__FORMAT_IF_DATE__(steps.generateAccessCode.data)",
                                      "__UI_BAKERY__FORMAT_IF_DATE__(steps.createAuthorizedRcd.data[0].lb_id)"
                                    ],
                                    "valueType": "custom"
                                  },
                                  {
                                    "type": "customDatabaseName",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "stepVersion",
                                    "value": 2,
                                    "valueType": "custom"
                                  },
                                  {
                                    "type": "successMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "failureMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "mapperEnabled",
                                    "value": false,
                                    "valueType": "custom"
                                  }
                                ],
                                "paused": false,
                                "type": "customSQLQuery"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17290249787850.5143916300116029",
                                "isChanged": true,
                                "level": 0,
                                "name": "smtpRequest",
                                "params": [
                                  {
                                    "type": "datasourceId",
                                    "value": "SMTP",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "successMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "failureMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "mapperEnabled",
                                    "value": false,
                                    "valueType": "custom"
                                  },
                                  {
                                    "type": "from",
                                    "value": "no-reply@lightburnsoftware.com",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "to",
                                    "value": "{{state.varReqAccessEmail}}",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "replyTo",
                                    "value": "support@lightburnsoftware.com",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "cc",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "bcc",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "subject",
                                    "value": "LightBurn Hardware Compatibility Matrix: Access Code",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "text",
                                    "value": "This code is good for 24 hours.  Once logged in your session will last for 7 days from the time of request.\n\nYour Access Code is...\n\n{{steps.generateAccessCode.data}}",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "html",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "attachments",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  }
                                ],
                                "paused": false,
                                "type": "smtpRequest"
                              }
                            ]
                          },
                          {
                            "condition": false,
                            "steps": [
                              {
                                "fallthroughError": false,
                                "id": "17290249787850.15322253471592462",
                                "isChanged": true,
                                "level": 1,
                                "name": "createUnauthorizedRcd_zenRegistered",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "type": "datasourceId",
                                    "value": "Lightburn (PG)",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "resourceId",
                                    "value": "public.lb_access_session",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "entity",
                                    "value": {
                                      "mode": "structured",
                                      "valueByMode": {
                                        "custom": "",
                                        "structured": {
                                          "email": {
                                            "value": "{{state.varReqAccessEmail}}"
                                          },
                                          "zen_user_id": {
                                            "value": "{{state.varZenUserProfile.users[0].id}}"
                                          }
                                        }
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "type": "customDatabaseName",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "successMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "failureMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "mapperEnabled",
                                    "value": false,
                                    "valueType": "custom"
                                  }
                                ],
                                "type": "CREATE_ENTITY"
                              }
                            ]
                          }
                        ],
                        "valueType": "custom"
                      }
                    ],
                    "type": "condition"
                  }
                ]
              },
              {
                "condition": false,
                "steps": [
                  {
                    "fallthroughError": false,
                    "id": "17290249787850.5857157937272661",
                    "isChanged": true,
                    "level": 1,
                    "name": "createUnauthorizedRcd_notRegistered",
                    "nameConfigured": true,
                    "params": [
                      {
                        "type": "datasourceId",
                        "value": "Lightburn (PG)",
                        "valueType": "string"
                      },
                      {
                        "type": "resourceId",
                        "value": "public.lb_access_session",
                        "valueType": "string"
                      },
                      {
                        "type": "entity",
                        "value": {
                          "mode": "structured",
                          "valueByMode": {
                            "custom": "",
                            "structured": {
                              "email": {
                                "value": "{{state.varReqAccessEmail}}"
                              }
                            }
                          }
                        },
                        "valueType": "custom"
                      },
                      {
                        "type": "customDatabaseName",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "successMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "failureMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "mapperEnabled",
                        "value": false,
                        "valueType": "custom"
                      }
                    ],
                    "type": "CREATE_ENTITY"
                  }
                ]
              }
            ],
            "valueType": "custom"
          }
        ],
        "type": "condition"
      },
      {
        "fallthroughError": true,
        "id": "17290249787850.6203975705727318",
        "isChanged": true,
        "level": 0,
        "name": "clostModal_accessCodeRequest",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "try {\n    ui.inputEmailAddressReqAccessCode.reset();\n    ui.modalRequestAccessCode.close();\n} catch (ex) {\n    console.error(ex);\n    throw new Error('Failed to execute clostModal_accessCodeRequest');\n}\n\nreturn true;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17440507366360.7119340140042933",
        "isChanged": true,
        "level": 0,
        "name": "notification",
        "params": [
          {
            "type": "message",
            "value": "One time access code sent! \nPlease check your email (and your spam folder) for your one-time code.",
            "valueType": "interpolatedValue"
          },
          {
            "type": "type",
            "value": "info",
            "valueType": "string"
          },
          {
            "type": "icon",
            "value": "at",
            "valueType": "string"
          },
          {
            "type": "duration",
            "value": "20000",
            "valueType": "interpolatedValue"
          },
          {
            "type": "position",
            "value": "top-end",
            "valueType": "string"
          },
          {
            "type": "hideOnClick",
            "value": false,
            "valueType": "custom"
          }
        ],
        "type": "showToast"
      }
    ]
  },
  {
    "config": {
      "confirmMessage": "Are you sure you'd like to proceed with \"{{actions.btnLogin_onClick.name}}\"?",
      "delay": "0",
      "errorToast": "Action \"{{actions.btnLogin_onClick.name}}\" has failed",
      "errorToastDuration": "3000",
      "errorToastHideByClick": false,
      "preserveStateOnPageChange": false,
      "runWhenFirstReferenced": true,
      "shouldConfirm": false,
      "showErrorToast": true,
      "showSuccessToast": false,
      "successToast": "Action \"{{actions.btnLogin_onClick.name}}\" successfully executed",
      "successToastDuration": "3000",
      "successToastHideByClick": false
    },
    "configured": false,
    "id": "17289351527710.2803962863078304",
    "kind": "workflow",
    "mode": "manual",
    "modeConfigured": true,
    "name": "btnLogin_onClick",
    "nameConfigured": true,
    "parentPageId": "17285310452590.17868028461832997",
    "selected": true,
    "steps": [
      {
        "fallthroughError": false,
        "id": "17289353420310.3163224180339328",
        "isChanged": true,
        "level": 0,
        "name": "getAccessCode",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var enteredAccessCode = {{ui.inputAccessCode.value}};\n\nreturn enteredAccessCode;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17289392235910.3754992127075758",
        "isChanged": true,
        "level": 0,
        "name": "getEmailAddress",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "asyncCode",
            "value": "var enteredEmail = {{ui.inputEmailAddressLogin.value}};\n\nreturn enteredEmail;",
            "valueType": "interpolatedValue"
          }
        ],
        "type": "customAsyncCode"
      },
      {
        "fallthroughError": false,
        "id": "17290067279960.39569058759091624",
        "isChanged": true,
        "level": 0,
        "name": "conditionEmailAndAccessCodeProvided",
        "nameConfigured": true,
        "params": [
          {
            "interpolationType": "code",
            "type": "code",
            "value": "return {{steps.getAccessCode.data !== undefined \u0026\u0026 steps.getAccessCode.data !== null \u0026\u0026 steps.getEmailAddress.data !== undefined \u0026\u0026 steps.getEmailAddress.data !== null}};",
            "valueType": "interpolatedValue"
          },
          {
            "type": "steps",
            "value": [
              {
                "condition": true,
                "steps": [
                  {
                    "fallthroughError": false,
                    "id": "17289401548010.2633915908203184",
                    "isChanged": true,
                    "level": 0,
                    "name": "queryAccessCodeValid",
                    "nameConfigured": true,
                    "params": [
                      {
                        "interpolationType": "string",
                        "type": "query",
                        "value": "SELECT lb_id, zen_user_id, email, (access_code = crypt({{steps.getAccessCode.data}}, access_code)) AS access_code_match FROM public.lb_access_session WHERE email like {{steps.getEmailAddress.data}} AND access_code IS NOT NULL AND access_code = crypt({{steps.getAccessCode.data}}, access_code) AND session_id IS null AND lb_create_ts \u003e NOW() - INTERVAL '1 DAY';",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "mustSelectFirst": true,
                        "type": "datasourceId",
                        "value": "Lightburn (PG)",
                        "valueType": "custom"
                      },
                      {
                        "type": "preparedQuery",
                        "value": "SELECT lb_id, zen_user_id, email, (access_code = crypt(?, access_code)) AS access_code_match FROM public.lb_access_session WHERE email like ? AND access_code IS NOT NULL AND access_code = crypt(?, access_code) AND session_id IS null AND lb_create_ts \u003e NOW() - INTERVAL '1 DAY';",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "preparedQueryParams",
                        "value": [
                          "__UI_BAKERY__FORMAT_IF_DATE__(steps.getAccessCode.data)",
                          "__UI_BAKERY__FORMAT_IF_DATE__(steps.getEmailAddress.data)",
                          "__UI_BAKERY__FORMAT_IF_DATE__(steps.getAccessCode.data)"
                        ],
                        "valueType": "custom"
                      },
                      {
                        "type": "customDatabaseName",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "stepVersion",
                        "value": 2,
                        "valueType": "custom"
                      },
                      {
                        "type": "successMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "failureMapper",
                        "value": "",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "mapperEnabled",
                        "value": false,
                        "valueType": "custom"
                      }
                    ],
                    "paused": false,
                    "type": "customSQLQuery"
                  },
                  {
                    "fallthroughError": false,
                    "id": "17289356104300.26415567221205816",
                    "isChanged": true,
                    "level": 0,
                    "name": "clearFields",
                    "nameConfigured": true,
                    "params": [
                      {
                        "interpolationType": "code",
                        "type": "asyncCode",
                        "value": "{{ui.inputEmailAddressLogin.setValue(null)}};\n{{ui.inputAccessCode.setValue(null)}};\n\nreturn true;",
                        "valueType": "interpolatedValue"
                      }
                    ],
                    "paused": false,
                    "type": "customAsyncCode"
                  },
                  {
                    "fallthroughError": false,
                    "id": "17290005105750.07511719038436349",
                    "isChanged": true,
                    "level": 0,
                    "name": "conditionValidAccessCode",
                    "nameConfigured": true,
                    "params": [
                      {
                        "interpolationType": "code",
                        "type": "code",
                        "value": "return {{steps.queryAccessCodeValid.data !== undefined \u0026\u0026 steps.queryAccessCodeValid.data !== null \u0026\u0026 steps.queryAccessCodeValid.data.length === 1 \u0026\u0026 steps.queryAccessCodeValid.data[0].access_code_match}};",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "steps",
                        "value": [
                          {
                            "condition": true,
                            "steps": [
                              {
                                "fallthroughError": false,
                                "id": "17290006403590.7630369247895972",
                                "isChanged": true,
                                "level": 0,
                                "name": "generateSessionId",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "interpolationType": "code",
                                    "type": "asyncCode",
                                    "value": "function generatePassword(length) {\n  var password = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890';\n  var charactersLength = characters.length;\n  for (var i = 0; i \u003c length; i++) {\n    password += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return password;\n}\n\n// Generate a 12-character password\nreturn generatePassword(128);",
                                    "valueType": "interpolatedValue"
                                  }
                                ],
                                "type": "customAsyncCode"
                              },
                              {
                                "fallthroughError": true,
                                "id": "17290008855010.24589241518187888",
                                "isChanged": true,
                                "level": 1,
                                "name": "queryPostSessionId",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "interpolationType": "string",
                                    "type": "query",
                                    "value": "UPDATE public.lb_access_session SET session_id = crypt({{steps.generateSessionId.data}}, gen_salt('md5')) WHERE lb_id = {{steps.queryAccessCodeValid.data[0].lb_id}};",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "mustSelectFirst": true,
                                    "type": "datasourceId",
                                    "value": "Lightburn (PG)",
                                    "valueType": "custom"
                                  },
                                  {
                                    "type": "preparedQuery",
                                    "value": "UPDATE public.lb_access_session SET session_id = crypt(?, gen_salt('md5')) WHERE lb_id = ?;",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "preparedQueryParams",
                                    "value": [
                                      "__UI_BAKERY__FORMAT_IF_DATE__(steps.generateSessionId.data)",
                                      "__UI_BAKERY__FORMAT_IF_DATE__(steps.queryAccessCodeValid.data[0].lb_id)"
                                    ],
                                    "valueType": "custom"
                                  },
                                  {
                                    "type": "customDatabaseName",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "stepVersion",
                                    "value": 2,
                                    "valueType": "custom"
                                  },
                                  {
                                    "type": "successMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "failureMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "mapperEnabled",
                                    "value": false,
                                    "valueType": "custom"
                                  }
                                ],
                                "type": "customSQLQuery"
                              },
                              {
                                "fallthroughError": true,
                                "id": "17290010484150.5463764435897225",
                                "isChanged": true,
                                "level": 1,
                                "name": "saveLocalSessionId",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "type": "name",
                                    "value": "lbsessionid",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "value",
                                    "value": "{{steps.generateSessionId.data}}",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "producible",
                                    "value": true,
                                    "valueType": "custom"
                                  }
                                ],
                                "paused": true,
                                "type": "putInLocalStorage"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17290049199140.8982215640235363",
                                "isChanged": true,
                                "level": 1,
                                "name": "codeAccessCodeValid",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "interpolationType": "code",
                                    "type": "asyncCode",
                                    "value": "localStorage.setItem('lbsessionid', {{steps.generateSessionId.data}});\nstate.varLbSessionIdValid = {{steps.queryAccessCodeValid.data[0].session_id_match}};\nstate.lbsessionid = {{steps.generateSessionId.data}};\nstate.lbsessionid_lb_id = {{steps.queryAccessCodeValid.data[0].lb_id}};\nstate.varLoggedInUserPrepend = \", \";\nstate.varLoggedInUser = {{steps.queryAccessCodeValid.data[0].email}};\nstate.varLoginLogoutText = 'Logout';\n\nreturn true",
                                    "valueType": "interpolatedValue"
                                  }
                                ],
                                "type": "customAsyncCode"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17290050210070.31949369033541264",
                                "isChanged": true,
                                "level": 1,
                                "name": "interval",
                                "params": [
                                  {
                                    "interpolationType": "code",
                                    "type": "interval",
                                    "value": "100",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "stopWhen",
                                    "value": "return {{localStorage.getItem('lbsessionid') !== undefined \u0026\u0026 localStorage.getItem('lbsessionid') !== null \u0026\u0026 localStorage.getItem('lbsessionid').length \u003e 0}}",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "skipNext",
                                    "value": true,
                                    "valueType": "custom"
                                  }
                                ],
                                "type": "interval"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17291746321060.240618149904116",
                                "isChanged": true,
                                "level": 2,
                                "name": "getUser",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "mustSelectFirst": true,
                                    "type": "datasourceId",
                                    "value": "Zendesk",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "method",
                                    "value": "GET",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "url",
                                    "value": "/api/v2/users/search",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "headers",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "",
                                            "value": ""
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "queryParams",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "query",
                                            "value": "{{state.varLoggedInUser}}"
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "body",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "structuredBody",
                                    "value": [],
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "bodyType",
                                    "value": "raw",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "successMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "failureMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "mapperEnabled",
                                    "value": false,
                                    "valueType": "custom"
                                  }
                                ],
                                "type": "httpRequest"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17291746652770.0309422092627738",
                                "isChanged": true,
                                "level": 2,
                                "name": "requestOrg",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "mustSelectFirst": true,
                                    "type": "datasourceId",
                                    "value": "Zendesk",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "method",
                                    "value": "GET",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "url",
                                    "value": "/api/v2/users/{{(steps.getUser.data.count === 1) ? steps.getUser.data.users[0].id : \"999999999999999\"}}/organizations",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "headers",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "",
                                            "value": ""
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "queryParams",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "",
                                            "value": ""
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "body",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "structuredBody",
                                    "value": [],
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "bodyType",
                                    "value": "raw",
                                    "valueType": "string"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "successMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "code",
                                    "type": "failureMapper",
                                    "value": "",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "mapperEnabled",
                                    "value": false,
                                    "valueType": "custom"
                                  }
                                ],
                                "type": "httpRequest"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17291746769750.9312836061201737",
                                "isChanged": true,
                                "level": 2,
                                "name": "codePostZenUserAndOrg",
                                "nameConfigured": true,
                                "params": [
                                  {
                                    "interpolationType": "code",
                                    "type": "asyncCode",
                                    "value": "state.varZenUserProfile = steps.getUser.data;\nstate.varZenOrgProfile = steps.requestOrg.data;\nstate.varStrZenUserId = {{state.varZenUserProfile.users[0].id}};\n\nif (state.varZenOrgProfile.count \u003e 0) {\n\tfor(var i = 0; i \u003c state.varZenOrgProfile.organizations.length; i++) {\n    if (state.varZenOrgProfile.organizations[i].tags.length \u003e 0) {\n      for ( var ii = 0; ii \u003c state.varZenOrgProfile.organizations[i].tags.length; ii++ ) {\n        if (state.varZenOrgProfile.organizations[i].tags[ii].toLowerCase() === \"vendor\") {\n          state.varStrZenOrgId = {{state.varZenOrgProfile.organizations[i].id}};\n        }\n      }\n    }\n  }\n}\n\nreturn {{data}};",
                                    "valueType": "interpolatedValue"
                                  }
                                ],
                                "type": "customAsyncCode"
                              },
                              {
                                "fallthroughError": false,
                                "id": "17290041969690.7832836582183336",
                                "isChanged": true,
                                "level": 1,
                                "name": "navigate",
                                "params": [
                                  {
                                    "interpolationType": "string",
                                    "type": "url",
                                    "value": "{{routes.home.url}}",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "interpolationType": "string",
                                    "type": "queryParams",
                                    "value": {
                                      "mode": "structured",
                                      "value": {
                                        "custom": "",
                                        "structured": [
                                          {
                                            "name": "",
                                            "value": ""
                                          }
                                        ]
                                      }
                                    },
                                    "valueType": "custom"
                                  }
                                ],
                                "type": "navigation"
                              }
                            ]
                          },
                          {
                            "condition": false,
                            "steps": [
                              {
                                "fallthroughError": false,
                                "id": "17290066377230.039372277554551305",
                                "isChanged": true,
                                "level": 0,
                                "name": "notification",
                                "params": [
                                  {
                                    "type": "message",
                                    "value": "Invalid Email and/or Access Code",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "type",
                                    "value": "warning",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "icon",
                                    "value": "alert-triangle",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "duration",
                                    "value": "6000",
                                    "valueType": "interpolatedValue"
                                  },
                                  {
                                    "type": "position",
                                    "value": "top-end",
                                    "valueType": "string"
                                  },
                                  {
                                    "type": "hideOnClick",
                                    "value": false,
                                    "valueType": "custom"
                                  }
                                ],
                                "type": "showToast"
                              }
                            ]
                          }
                        ],
                        "valueType": "custom"
                      }
                    ],
                    "type": "condition"
                  }
                ]
              },
              {
                "condition": false,
                "steps": [
                  {
                    "fallthroughError": false,
                    "id": "17290069063050.4145516930367803",
                    "isChanged": true,
                    "level": 0,
                    "name": "notifWarnEmailAndAccessRequired",
                    "nameConfigured": true,
                    "params": [
                      {
                        "type": "message",
                        "value": "Email and Access Code required to log in",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "type",
                        "value": "warning",
                        "valueType": "string"
                      },
                      {
                        "type": "icon",
                        "value": "alert-circle",
                        "valueType": "string"
                      },
                      {
                        "type": "duration",
                        "value": "3000",
                        "valueType": "interpolatedValue"
                      },
                      {
                        "type": "position",
                        "value": "top-end",
                        "valueType": "string"
                      },
                      {
                        "type": "hideOnClick",
                        "value": false,
                        "valueType": "custom"
                      }
                    ],
                    "type": "showToast"
                  }
                ]
              }
            ],
            "valueType": "custom"
          }
        ],
        "type": "condition"
      }
    ]
  }
]